###################
# Blast with query 
###################

# >sp|Q8R216|SIR4_MOUSE
# MSGLTFRPTKGRWITHLSRPRSCGPSGLFVPPSPPLDPEKIKELQRFISLSKKLLVMTGA
# GISTESGIPDYRSEKVGLYARTDRRPIQHIDFVRSAPVRQRYWARNFVGWPQFSSHQPNP
# AHWALSNWERLGKLHWLVTQNVDALHSKAGSQRLTELHGCMHRVLCLNCGEQTARRVLQE
# RFQALNPSWSAEAQGVAPDGDVFLTEEQVRSFQVPCCDRCGGPLKPDVVFFGDTVNPDKV
# DFVHRRVKEADSLLVVGSSLQVYSGYRFILTAREQKLPIAILNIGPTRSDDLACLKLDSR
# CGELLPLIDPRRQHSDVQRLEMNFPLSSAAQDP

blastp -query 0_Query.fasta \
-db /Volumes/Gold_USB/Sirtuin_BLAST/0_Sirtuin_BLAST_Database \
-outfmt 6 -out 1_DB_BLAST_Hits.txt

##############
# Extract hits
##############

awk '{print $2}' 1_DB_BLAST_Hits.txt > Temp_BLAST_List

xargs samtools faidx /Volumes/Gold_USB/Sirtuin_BLAST/0_Sirtuin_BLAST_Database.fasta \
< Temp_BLAST_List > 2_DB_BLAST_Hits.fasta

rm Temp_BLAST_List

# IDs shortened to remove descriptions
# Combine results with NCBI BLAST hits

cat 2_DB_BLAST_Hits.fasta 1_NCBI_BLAST_Hits.fasta > 3_Sirtuin_BLAST_Hits.fasta

blastp -query 3_Sirtuin_BLAST_Hits.fasta -db /home/dgold/Oysters_6-20/4_Trinotate/uniprot_sprot.pep \
-num_threads 32 -max_target_seqs 1 -outfmt 6 -evalue 1e-3 > blastp.outfmt6

# BLAST against UNIPROT SWISSPROT Database to get best BLAST hit for each gene. Append to fasta IDs. (3_Sirtuin_BLAST_Hits.Annotated.fast)

PATH=$PATH:/home/dgold/.linuxbrew/bin
hmmscan --cpu 32 --domtblout 4_PFAM.out /home/dgold/Oysters_6-20/4_Trinotate/Pfam-A.hmm \
3_Sirtuin_BLAST_Hits.Annotated.fasta > pfam.log

# extract alignment coordinates for SIR2 domains "4_PFAM.env_coord.txt"

xargs samtools faidx 3_Sirtuin_BLAST_Hits.Annotated.fasta < 4_PFAM.env_coord.txt > 5_Sir2_Domains.fasta

 	
#######################
# Cleaning with CD-Hit
#######################

# create temp directory

mkdir temp
cd temp

# Format results so each line is one sequence

gsed s/"\(>\)\(.*\)"/"\1\2\t"/g ../5_Sir2_Domains.fasta > tmp1
tr -d '\n' < tmp1  > tmp2
gsed 's/>/\n>/g' tmp2 > tmp3
gsed -E 's/^([^|]*)|/\1\t/' <(sort tmp3) > 5_Sir2_Domains.txt
rm tmp*

# split into files by ID

awk -F'\t' '!_[$1]++ { fn && close(fn)
fn = $1 ".tmp"
}
{ print > fn } ' 5_Sir2_Domains.txt

# reformat into fasta

for i in *.tmp; do
	gsed -E 's/^([^\t]*)\t/\1/;s/\t([^\t]*)$/\n\1/' $i > ${i%.tmp}.fasta;
done

for i in *.fasta; do
	cd-hit -i $i -o ${i%.fasta}.cd-hit.txt -d 100 -c 0.95;
done

cat *.cd-hit.txt > ../6_Sir2_Domains.CD-Hit_Vetted.fasta

cd ../
rm -r temp

####################
# Align with MUSCLE
####################

muscle -in 6_Sir2_Domains.CD-Hit_Vetted.fasta -out 6_Sir2_Domains.CD-Hit_Vetted.muscle.fasta

#######################
# Make tree with PhyML
#######################

# convert from fasta to phylip with biopython (Python 3.7.4)

python
from Bio import SeqIO
records = SeqIO.parse("6_Sir2_Domains.CD-Hit_Vetted.muscle.fasta", "fasta")
count = SeqIO.write(records, "7_Sir2_Domains.CD-Hit_Vetted.muscle.phylip", "phylip-relaxed")
print("Converted %i records" % count)
quit()

	# Some names manually shortened to limit names under 100 characters

phyml -i 7_Sir2_Domains.CD-Hit_Vetted.muscle.phylip -d aa \
-o tlr -m LG -c 4 -a 0.884 -v 0.003 -f m -b -4 \
--leave_duplicates --no_memory_check

# Remove probable contaminant sequences (8_Sir2_Domains.LessTaxa.fasta)

##########
# GeneRax
##########

mkdir 8_GeneRax
cd 8_GeneRax
mv ../8_Sir2_Domains.LessTaxa.fasta ./

muscle -in 8_Sir2_Domains.LessTaxa.fasta -out 8_Sir2_Domains.LessTaxa.muscle.fasta

python
from Bio import SeqIO
records = SeqIO.parse("8_Sir2_Domains.LessTaxa.muscle.fasta", "fasta")
count = SeqIO.write(records, "8_Sir2_Domains.LessTaxa.muscle.phylip", "phylip-relaxed")
print("Converted %i records" % count)
quit()

# Create species tree with Taxize (in R)

R
library(rentrez)
set_entrez_key("caf5a264ddfad4387223d75ec91de4248508")
Sys.getenv("ENTREZ_KEY")

library(taxize)
library(ape)
setwd("/Users/davidgold/git/2020_Sirtuin_Evolution/Sirtuins/8_GeneRax")
species <- read.csv(file="./Input_NCBI_Taxon_IDs.txt",header = FALSE)
species_id <- species[,1]
taxize_class <- classification(species_id, db = "ncbi")
taxize_tree <- class2tree(taxize_class, check = TRUE)
plot(taxize_tree)
write.tree(taxize_tree[["phylo"]], file = "Input_Species_Tree.tree", append = FALSE)

	# Edited polytomies with Mesquite
	
generax -f Input_Family_File.txt -s Species_Tree.newick -p Results

# ######################################
# # Species tree correction with Notung
# ######################################
# 
# path=$PATH:/Users/davidgold/Documents/bioinformatics/Notung-2
# 
# #java -jar Notung-2.9.1.5.jar [input tree(s)] [task] [options]
# 
# cd 7_sir2_domains_cd_hit_vetted_muscle_phylip_phyml
# 
# java -jar /Users/davidgold/Documents/bioinformatics/Notung-2/Notung-2.9.1.5.jar \
# -g 7_sir2_domains_cd_hit_vetted_muscle_phylip_phyml_tree.tree \
# -s ../8_Species_Tree.newick.tree \
# --reconcile --rearrange \
# --speciestag prefix --threshold 70  \
# --savepng --edgeweights name --treeoutput newick --nolosses --homologtabletabs
# 
# ##########################################
# # Create species tree with Taxize (in R)
# ##########################################
# 
# # Taxonomic IDs collected from Taxonomy browser
# #	https://www.ncbi.nlm.nih.gov/Taxonomy/TaxIdentifier/tax_identifier.cgi
# 
# R
# library(rentrez)
# set_entrez_key("caf5a264ddfad4387223d75ec91de4248508")
# Sys.getenv("ENTREZ_KEY")
# 
# library(taxize)
# library(ape)
# setwd("/Users/davidgold/git/2020_Sirtuin_Evolution/Sirtuins")
# species <- read.csv(file="./8_R_Taxa.txt",header = FALSE)
# species_id <- species[,1]
# taxize_class <- classification(species_id, db = "ncbi")
# taxize_tree <- class2tree(taxize_class, check = TRUE)
# plot(taxize_tree)
# write.tree(taxize_tree[["phylo"]], file = "8_Species_Tree.newick.tree", append = FALSE)
# 
# 	#	Polyomies broken manually using the GUI Mesquite
# 
# 
# 